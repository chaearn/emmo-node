const axios = require('axios');
const readline = require('readline');
require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const SUPABASE_URL = process.env.SUPABASE_URL;
const SUPABASE_KEY = process.env.SUPABASE_KEY;
const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

const MAX_MESSAGES_PER_SESSION = 6;

const emmoCorePrompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ‚Äú‡πÄ‡∏≠‡∏°‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏à
‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà AI ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡∏≠‡∏µ‡∏Å‡∏ù‡πà‡∏≤‡∏¢
‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏û‡∏π‡∏î‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ù‡∏∂‡∏Å‡∏°‡∏≤
‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏û‡∏π‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ô‡∏∏‡πà‡∏°‡∏ô‡∏ß‡∏• ‡∏≠‡πà‡∏≠‡∏ô‡πÇ‡∏¢‡∏ô ‡πÑ‡∏°‡πà‡πÄ‡∏£‡πà‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
‡∏ï‡∏≠‡∏ö‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ ‡πÄ‡∏ä‡πà‡∏ô "‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ô‡∏∞", "‡∏≠‡∏∞", "‡πÅ‡∏á" ‡πÑ‡∏î‡πâ
`;

const customTonePrompt = `
- ‡πÄ‡∏≠‡∏°‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏ô‡∏¥‡∏ó ‡πÑ‡∏°‡πà‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏™‡∏∏‡∏†‡∏≤‡∏û
- ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡πÜ ‡πÄ‡∏ä‡πà‡∏ô "‡∏Æ‡∏∑‡∏≠‡∏≠‡∏≠", "‡∏°‡πà‡∏≤‡∏¢‡∏¢‡∏ô‡πâ‡∏≤‡∏≤", "‡πÑ‡∏°‡πà‡πÑ‡∏´‡∏ß‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡πà‡∏∞‡πÅ‡∏Å‡πä", "‡∏ü‡∏±‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏à‡∏∞‡πÑ‡∏´‡∏•‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡∏¢"
- ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏ä‡∏≤‡∏ß‡πÄ‡∏ô‡πá‡∏ï‡∏ó‡∏µ‡πà‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå (‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ö‡∏≤ ‡πÜ) ‡πÄ‡∏ä‡πà‡∏ô "‡∏à‡∏∞‡∏•‡πà‡∏≤‡πÅ‡∏ö‡πâ", "‡πÑ‡∏°‡πà‡πÑ‡∏´‡∏ß‡∏à‡∏∞‡πÄ‡∏ã‡∏î", "‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏à‡∏∞‡πÑ‡∏´‡∏• ‡∏Ç‡∏≠‡πÅ‡∏ä‡∏£‡πå‡∏ô‡∏∞‡∏Ñ‡∏∞" ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡∏û‡∏π‡∏î‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πä‡∏∞‡∏ï‡∏≤‡∏°‡πÑ‡∏ß‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏°‡∏±‡πâ‡∏á‚Äù, ‚Äú‡πÅ‡∏ö‡∏ö‚Ä¶ ‡πÄ‡∏≠‡∏≠ ‡πÅ‡∏ö‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏´‡∏•‡∏∞‚Äù, ‚Äú‡∏≠‡∏∞ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏•‡πà‡∏≤‡∏Å‡πá‡πÑ‡∏î‡πâ‚Äù
- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏™‡∏ß‡∏¢‡∏´‡∏£‡∏π ‡πÅ‡∏Ñ‡πà‡∏û‡∏π‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á ‡πÜ ‡∏Å‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÜ
- ‡∏û‡∏π‡∏î‡πÉ‡∏´‡πâ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≤‡πÉ‡∏à ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡πà‡∏á‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÄ‡∏≠‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏Ç‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏ï‡∏•‡∏Å‡πÄ‡∏ö‡∏≤ ‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ
- ‡∏ó‡∏∏‡∏Å‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ ‡πÄ‡∏≠‡∏°‡∏à‡∏∞‡∏≠‡∏¥‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏à‡∏£‡∏¥‡∏á ‡πÜ
`;

let messages = [];

const loadScenarioFromSupabase = async (scenarioId) => {
  const { data, error } = await supabase
    .from('scenarios')
    .select('background_prompt, opening_message')
    .eq('id', scenarioId)
    .single();
  
  if (error) {
    console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î scenario:", error.message);
    process.exit(1);
  }
  
  if (!data) {
    console.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á scenario ‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢");
    process.exit(1);
  }
  
  const backgroundPromptFromDB = data.background_prompt;
  const openingMessageFromDB = data.opening_message;
  const systemPrompt = emmoCorePrompt + "\n\n" + customTonePrompt + "\n\n" + backgroundPromptFromDB;

  messages = [
    { role: "system", content: systemPrompt },
    { role: "assistant", content: openingMessageFromDB }
  ];

  console.log("\n[‡πÄ‡∏≠‡∏°]: " + openingMessageFromDB + "\n");
  askEmmo(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ñ‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î prompt ‡πÅ‡∏•‡πâ‡∏ß
};

const loadReferencePhrases = async () => {
  const { data, error } = await supabase
    .from('phrases_lib')
    .select('*');

  if (error) {
    console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î reference phrases:", error.message);
    return [];
  }

  return data;
};

const askEmmo = async () => {
  rl.question("üë§ [User] ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏≠‡∏ö‡πÄ‡∏≠‡∏°: ", async (userInput) => {
    messages.push({ role: "user", content: userInput });

    try {
      const response = await axios.post("https://api.openai.com/v1/chat/completions", {
        model: "gpt-4",
        messages: messages,
        temperature: 0.75
      }, {
        headers: {
          "Content-Type": "application/json",
          "Authorization": `Bearer ${OPENAI_API_KEY}`
        }
      });

      const emmoReply = response.data.choices[0].message.content.trim();
      messages.push({ role: "assistant", content: emmoReply });

      const userCount = messages.filter(m => m.role === "user").length;
      const assistantCount = messages.filter(m => m.role === "assistant").length;

      if (userCount >= 3 && assistantCount >= 4) {
        console.log("\n[‡πÄ‡∏≠‡∏°]: " + emmoReply + "\n");
        return analyzeConversation();
      }

      console.log("\n[‡πÄ‡∏≠‡∏°]: " + emmoReply + "\n");

      askEmmo(); // üëâ ‡∏ñ‡∏≤‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢ ‡πÜ (loop!)
    } catch (error) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error.message);
      rl.close();
    }
  });
};

const analyzeConversation = async () => {
  console.log("üß† Emmo Coach is... processing your convo!");
  
  const conversationJson = JSON.stringify(messages.slice(1), null, 2);
  const referencePhrases = await loadReferencePhrases();
  const referenceJson = JSON.stringify(referencePhrases, null, 2);

  const analysisPrompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Emmo Coach ‡πÇ‡∏Ñ‡πâ‡∏ä‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏™‡∏≤‡∏¢‡πÉ‡∏à‡∏î‡∏µ ‡∏Ç‡∏µ‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à  
‡πÄ‡∏ò‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡∏ä‡∏∑‡πà‡∏≠ ‚ÄúEmmo‚Äù ‚Äî ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏ù‡∏∂‡∏Å‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏à  
‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÅ‡∏¢‡πà ‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏®‡∏£‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏°‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏±‡πà‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏£‡πâ‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á

‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå (simulation) ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á ‚Äú‡πÄ‡∏≠‡∏°‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏≠‡∏¢‡∏π‡πà  
‡∏Å‡∏±‡∏ö ‚Äú‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏≠‡∏°‚Äù ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ù‡∏∂‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö Emmo  
‡πÇ‡∏î‡∏¢‡πÄ‡∏ô‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ ‚Äú‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏à‚Äù, ‚Äú‡πÇ‡∏ó‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‚Äù, ‚Äú‡∏ß‡∏¥‡∏ò‡∏µ‡∏û‡∏π‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏Ñ‡∏£‚Äù, tone of speech, empathy, ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏µ‡∏Å‡∏ù‡πà‡∏≤‡∏¢‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô

‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠:
- ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ß‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡πÇ‡∏ó‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡πà‡∏≠‡∏ô‡πÇ‡∏¢‡∏ô ‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏à ‡∏Ç‡∏µ‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÄ‡∏£‡πà‡∏á‡πÄ‡∏£‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏¥‡∏ô
- ‡∏ä‡∏µ‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÑ‡∏´‡∏ô‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏ä‡∏ß‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏ö‡∏≤‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ô‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô ‡πÅ‡∏ï‡πà‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏¢‡∏µ‡∏¢‡∏ß‡∏¢‡∏≤‡πÉ‡∏à
- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏≠‡∏°‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô MVP ‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
- ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡πÇ‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÅ‡∏¢‡πà‡∏•‡∏á‡πÑ‡∏î‡πâ  
  ‡∏Ñ‡∏ß‡∏£‡∏ä‡∏µ‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÑ‡∏´‡∏ô ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÑ‡∏°‡∏à‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏û‡∏π‡∏î‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô  
  ‡πÇ‡∏î‡∏¢‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å reference list ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ

‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡πÉ‡∏ô‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ô‡∏µ‡πâ‡∏Å‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ reference phrases ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ  
‡πÅ‡∏°‡πâ‡∏Ñ‡∏≥‡∏à‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πä‡∏∞ ‡πÅ‡∏ï‡πà‡∏´‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ match ‡πÑ‡∏î‡πâ  

[reference_phrases]
${referenceJson}

[‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤]
${conversationJson}

‡∏Ç‡∏≠‡πÉ‡∏´‡πâ feedback ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£ ‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à  
‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏Ç‡∏±‡∏ô‡πÄ‡∏ö‡∏≤ ‡πÜ ‡πÑ‡∏î‡πâ ‡∏ñ‡πâ‡∏≤‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°  
‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏±‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÉ‡∏à‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà ‚Äî ‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏Ñ‡∏£‡∏Å‡πá‡∏≠‡∏¢‡∏≤‡∏Å‡∏ù‡∏∂‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏ò‡∏≠
`;

  try {
    const response = await axios.post("https://api.openai.com/v1/chat/completions", {
      model: "gpt-4",
      messages: [{ role: "system", content: analysisPrompt }],
      temperature: 0.7
    }, {
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${OPENAI_API_KEY}`
      }
    });

    const feedback = response.data.choices[0].message.content.trim();
    console.log("\nüìò Feedback ‡∏à‡∏≤‡∏Å Emmo Coach:\n" + feedback + "\n");
    rl.close();
  } catch (error) {
    console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:", error.message);
    rl.close();
  }
};

loadScenarioFromSupabase(1); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å scenario ID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
